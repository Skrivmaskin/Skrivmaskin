// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Linq;
using Foundation;
using AppKit;
using Skrivmaskin.Generation;
using Skrivmaskin.Services;
using Skrivmaskin.Compiler;
using System.Collections.Generic;

namespace Skrivmaskin.Editor
{
	public partial class ResultsViewController : NSViewController
	{
		public ResultsViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad ()
        {
            base.ViewDidLoad ();

            // Set the initial value for the label
            Results.Value = "No results generated yet.";
        }

        partial void GenerateClicked (Foundation.NSObject sender)
        {
            Generate ();
        }

        private CompiledProject compiledProject = null;
        IReadOnlyDictionary<string, string> variableValues = null;

        internal void SetCompiledProject (IReadOnlyDictionary<string,string> variableValues, CompiledProject c)
        {
            compiledProject = c;
            this.variableValues = variableValues;
        }

        internal CompiledProject GetCompiledProject ()
        {
            return compiledProject;
        }

        readonly SkrivmaskinGenerator generator = new SkrivmaskinGenerator (new RandomChooser (), new SingleSpaceUnixGeneratorConfig ());

        public void Generate ()
        {
            if (compiledProject != null) {
                var text = (generator.Generate (compiledProject, new DictionaryBackedVariableSubstituter (variableValues)));
                Results.Value = text;
            } else {
                Results.Value = "Nothing to generate";
            }
        }
	}
}
